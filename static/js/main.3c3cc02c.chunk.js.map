{"version":3,"sources":["App.js","index.js"],"names":["POSSIBLE_WORDS","LETTERS","DEFAULT_STATE","numberOfWrongGuesses","lettersAlreadyUsed","WordToGuess","wordToGuess","className","map","letter","index","key","includes","EndMessage","text","onClick","GuessCount","LetterButton","alreadyClicked","App","state","generateWordToGuess","handleLetterClick","setState","resetGame","Math","floor","random","length","this","won","every","i","lost","Component","ReactDOM","render","document","getElementById"],"mappings":"yMAIMA,G,MAAiB,CACrB,UACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,aACA,aACA,cACA,aACA,aACA,aACA,aACA,eAGIC,EAAO,YAAO,8BAGdC,EAAgB,CACpBC,qBAAsB,EACtBC,mBAAoB,IAGhBC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaF,EAAhB,EAAgBA,mBAAhB,OAClB,yBAAKG,UAAU,eACZ,YAAID,GAAaE,KAChB,SAACC,EAAQC,GAAT,OACA,0BAAMC,IAAKD,GACRN,EAAmBQ,SAASH,GAAUA,EAZzB,IAWhB,UAMAI,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAAT,OACjB,6BACE,yBAAKR,UAAU,eAAf,YAAuCO,EAAvC,KACA,yBAAKP,UAAU,aAAaQ,QAASA,GAArC,uCAKEC,EAAa,SAAC,GAAD,IAAGb,EAAH,EAAGA,qBAAH,OACjB,yBAAKI,UAAU,WAAf,iCAAwD,GAAKJ,IAGzDc,EAAe,SAAC,GAAD,IAAGR,EAAH,EAAGA,OAAQS,EAAX,EAAWA,eAAgBH,EAA3B,EAA2BA,QAA3B,OACnB,yBAAKR,UAAS,uBAAkBW,GAAkBH,QAAS,kBAAMA,EAAQN,KACvE,0BAAMF,UAAU,UACbE,KA0DQU,E,4MApDbC,M,2BACKlB,G,IACHI,YAAa,EAAKe,wB,EAOpBC,kBAAoB,SAAAb,IACjB,EAAKW,MAAMhB,mBAAmBQ,SAASH,IACtC,EAAKc,SAAS,CACZnB,mBAAmB,GAAD,mBAAM,EAAKgB,MAAMhB,oBAAjB,CAAqCK,OAG1D,EAAKW,MAAMhB,mBAAmBQ,SAASH,KAAY,EAAKW,MAAMd,YAAYM,SAASH,IAClF,EAAKc,SAAS,CACZpB,qBAAsB,EAAKiB,MAAMjB,qBAAuB,K,EAI9DqB,UAAY,WACV,EAAKD,SAAL,2BACKrB,GADL,IAEEI,YAAa,EAAKe,0B,oEAlBpB,OAAOrB,EAAeyB,KAAKC,MAAMD,KAAKE,SAAW3B,EAAe4B,W,+BAsBxD,IAAD,SAC2DC,KAAKT,MAA/Dd,EADD,EACCA,YAAaH,EADd,EACcA,qBAAsBC,EADpC,EACoCA,mBACrC0B,EAAM,YAAIxB,GAAayB,OAAM,SAAAC,GAAC,OAAI5B,EAAmBQ,SAASoB,MAC9DC,EAAO9B,GAAwB,GAErC,OACE,yBAAKI,UAAU,SACb,kBAAC,EAAD,CAAaD,YAAaA,EAAaF,mBAAoBA,IAC1DH,EAAQO,KAAI,SAAAC,GAAM,OACf,kBAAC,EAAD,CACEA,OAAQA,EACRM,QAAS,EAAKO,kBACdJ,eAAgBd,EAAmBQ,SAASH,GAC5CE,IAAKF,OAGX,kBAAC,EAAD,CAAYN,qBAAsBA,IACjC2B,GAAO,kBAAC,EAAD,CAAYhB,KAAK,MAAMC,QAASc,KAAKL,YAC5CS,GAAQ,kBAAC,EAAD,CAAYnB,KAAK,OAAOC,QAASc,KAAKL,iB,GA/CrCU,aCtElBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.3c3cc02c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n// Ressources found here: http://www.idees-gages.com/mots-jeu-pendu.php\nconst POSSIBLE_WORDS = [\n  \"BALLAST\", \n  \"BRETZEL\",\n  \"DJEMBE\",\n  \"JOUXTER\",\n  \"RENEGAT\",\n  \"STROPHE\",\n  'UKELELE',\n  \"ZOZOTER\",\n  \"CITHARE\", \n  \"QUETSCHE\",\n  \"PASTICHE\",\n  \"CAPELINE\",\n  \"PASTICHE\",\n  \"SYMPTOME\",\n  \"ZEPPELIN\", \n  \"TOMAHAWK\", \n  \"BALALAIKA\", \n  \"ASEPTISER\",\n  \"KLAXONNER\",\n  \"PRINTEMPS\",\n  \"XYLOPHONE\",\n  \"QUEMANDER\",\n  \"FLIBUSTIER\",\n  \"APOCALYPSE\",\n  \"CONTROVERSE\",\n  \"LABYRINTHE\",\n  \"SOLILOQUER\",\n  \"COQUELICOT\",\n  \"ACROSTICHE\",\n  \"MAHARADJAH\"\n]\n\nconst LETTERS = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\nconst HIDDEN_SYMBOL = \"_\"\n\nconst DEFAULT_STATE = {\n  numberOfWrongGuesses: 0,\n  lettersAlreadyUsed: [],\n}\n\nconst WordToGuess = ({ wordToGuess, lettersAlreadyUsed }) => (\n  <div className=\"wordToGuess\">\n    {[...wordToGuess].map(\n      (letter, index) =>(\n      <span key={index}>\n        {lettersAlreadyUsed.includes(letter) ? letter : HIDDEN_SYMBOL} </span>\n    ))}\n  </div>\n)\n\nconst EndMessage = ({ text, onClick }) => (\n  <div>\n    <div className=\"wordToGuess\">You have {text}!</div>\n    <div className=\"endMessage\" onClick={onClick}> Click here to reset the game... </div>\n  </div>\n  \n)\n\nconst GuessCount = ({ numberOfWrongGuesses }) => (\n  <div className=\"guesses\">Number of wrong guesses left: {10 - numberOfWrongGuesses}</div>\n)\n\nconst LetterButton = ({ letter, alreadyClicked, onClick }) => (\n  <div className={`letterButton ${alreadyClicked}`} onClick={() => onClick(letter)}>\n    <span className=\"letter\">\n      {letter}\n    </span>\n  </div>\n  )\n\nclass App extends Component {\n  state = {\n    ...DEFAULT_STATE,\n    wordToGuess: this.generateWordToGuess(),\n  }\n\n  generateWordToGuess(){\n    return POSSIBLE_WORDS[Math.floor(Math.random() * POSSIBLE_WORDS.length)]\n  }\n\n  handleLetterClick = letter => {\n    !this.state.lettersAlreadyUsed.includes(letter) && (\n      this.setState({ \n        lettersAlreadyUsed: [...this.state.lettersAlreadyUsed, letter],\n      }))\n      \n    !this.state.lettersAlreadyUsed.includes(letter) && !this.state.wordToGuess.includes(letter) && (\n      this.setState({ \n        numberOfWrongGuesses: this.state.numberOfWrongGuesses + 1,\n      }))\n  }\n\n  resetGame = () => {\n    this.setState({\n      ...DEFAULT_STATE,\n      wordToGuess: this.generateWordToGuess(),\n    })\n  }\n\n  render() {\n    const { wordToGuess, numberOfWrongGuesses, lettersAlreadyUsed } = this.state\n    const won = [...wordToGuess].every(i => lettersAlreadyUsed.includes(i))\n    const lost = numberOfWrongGuesses >= 10\n\n    return (\n      <div className=\"pendu\">\n        <WordToGuess wordToGuess={wordToGuess} lettersAlreadyUsed={lettersAlreadyUsed} />\n        {LETTERS.map(letter => (\n            <LetterButton \n              letter={letter}\n              onClick={this.handleLetterClick}\n              alreadyClicked={lettersAlreadyUsed.includes(letter)}\n              key={letter}\n            />\n          ))}\n        <GuessCount numberOfWrongGuesses={numberOfWrongGuesses} />\n        {won && <EndMessage text=\"won\" onClick={this.resetGame}/>}\n        {lost && <EndMessage text=\"lost\" onClick={this.resetGame}/>}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}